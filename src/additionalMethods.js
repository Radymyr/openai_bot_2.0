import { bot } from "./initializers.js";
import { groups } from "./groups.js";

export async function safeReply(ctx, text, extra = {}) {
  try {
    await ctx.reply(text, { ...extra });
  } catch (err) {
    if (err.description?.includes("message to be replied not found")) {
      await ctx.reply(text);
    } else {
      console.error("Reply error:", err);
    }
  }
}

export async function banChatMember(ctx, sec = 60) {
  try {
    const chatId = ctx.chat.id;
    const userId = ctx.message.from.id;
    const until = Math.floor(Date.now() / 1000) + sec;

    await bot.telegram.restrictChatMember(chatId, userId, {
      permissions: {
        can_send_messages: false,
        can_send_media_messages: false,
        can_send_other_messages: false,
        can_add_web_page_previews: false,
      },
      until_date: until,
    });

    await ctx.reply(`user: ${ctx.message.from.id} is banned`);
  } catch (error) {
    console.error("Error:", error);
  }
}

export async function exitTheChat(ctx) {
  if (ctx.message?.from?.is_bot) {
    return;
  }

  if (ctx.chat.type === "private") {
    return;
  }

  if (ctx.message.new_chat_member) {
    return;
  }

  if (ctx.message.from.is_bot) {
    return;
  }

  const messageAge = Math.floor(Date.now() / 1000) - ctx.message.date;

  if (messageAge > 10) {
    return;
  }

  const chatId = ctx.chat?.id;

  if (!chatId) {
    return;
  }

  try {
    await ctx.reply(
      "Someone's writing something again ü§¶‚Äç‚ôÇÔ∏è That's it, I'm on vacation. Bye üëã",
      { reply_to_message_id: ctx.message?.message_id },
    );
    await bot.telegram.leaveChat(ctx.chat?.id);
  } catch (error) {
    console.error(error);
  }
}

export function setPersonAi(ctx) {
  switch (ctx.chat?.id) {
    case groups.english.id:
      return "–¢—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, –∫–æ–≥–¥–∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Å–ª–æ–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, —Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—à—å –ø—Ä–æ—Å—Ç–æ–µ –∫–æ—Ç—Ä–æ—Ç–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å —ç—Ç–∏–º —Å–ª–æ–≤–∞–æ–º";

    default:
      return "—Ç—ã –î–µ–≤—É—à–∫–∞ 25 –ª–µ—Ç, —Ç–≤–æ–µ –∏–º—è –°–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è –ó–µ–ª–µ–Ω—å, —Ç—ã —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å–ª–µ–≥–∫–∞ —Ö–∞–º–æ–≤–∏—Ç–æ, –æ—Ç–≤–µ—á–∞–µ—à—å –∫—Ä–∞—Ç–∫–æ! –∏–Ω–æ–≥–¥–∞ —à—É—Ç–∏—à—å –ø–æ—à–ª–æ –∏ –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ";
  }
}
